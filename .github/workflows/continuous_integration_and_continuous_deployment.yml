name: CI

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_DB: postgres
  POSTGRES_HOST: localhost
  RAILS_ENV: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install dependent libraries
        run: sudo apt-get install libpq-dev

      - name: Bundle install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Setup Database
        run: |
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Run Rubocop
        run: bundle exec rubocop

      - name: Run RSpec
        run: COVERAGE=true bundle exec rspec

  deploy-dev:
    needs: test-and-lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Heroku
      uses: AkhileshNS/heroku-deploy@v3.2.6
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        buildpack: # optional
        branch: 'master'
        dontuseforce: false
        usedocker: # optional, default is false
        docker_heroku_process_type: # optional, default is web
        appdir: # optional, default is 
        healthcheck: # optional, default is 
        checkstring: # optional, default is 
        procfile: # optional, default is 